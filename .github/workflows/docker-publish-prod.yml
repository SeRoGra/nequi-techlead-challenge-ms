name: Build & Push Docker Image [prod]

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build JAR and Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant permission to execute gradlew
        run: chmod +x ./gradlew

      - name: Build project with Gradle
        run: ./gradlew clean build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -f deployment/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/nequi-techlead-challenge-ms:latest .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nequi-techlead-challenge-ms:latest

  deploy-to-ec2:
    name: Deploy Docker Image to EC2
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Download SSH private key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: SSH into EC2 and deploy Docker container
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${{ secrets.AWS_EC2_PUBLIC_DNS }} << 'EOF'
            # Detener y eliminar el contenedor anterior si existe
            docker stop nequi-techlead-challenge-ms-instance || true
            docker rm nequi-techlead-challenge-ms-instance || true
          
            # Descargar la última versión de la imagen
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nequi-techlead-challenge-ms:latest
          
            # Ejecutar el contenedor
            docker run -d --name nequi-techlead-challenge-ms-instance -p 8080:8080 \
              -e SERVER_PORT=${{ secrets.SERVER_PORT }} \
              -e MYSQL_URL=${{ secrets.AWS_DB_URL }} \
              -e MYSQL_USERNAME=${{ secrets.AWS_DB_USER }} \
              -e MYSQL_PASSWORD=${{ secrets.AWS_DB_PASSWORD }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/nequi-techlead-challenge-ms:latest
          EOF